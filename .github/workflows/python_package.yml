# This workflow will install Python dependencies,
# run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
  pull_request:
    types: [opened, synchronize]

jobs:
  run-tests:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Get full python version
        id: full-python-version
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")
      - name: Install poetry
        run: |
          curl -fsS -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          python get-poetry.py -y
      - name: Add Poetry to PATH
        run: echo "${HOME}/.poetry/bin" >> $GITHUB_PATH
      - name: Configure poetry
        run: poetry config virtualenvs.in-project true
      - name: Set up cache
        uses: actions/cache@v1
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv
      - name: Install Dependencies
        run: poetry install
      - name: Lint with flake8 and Pylint
        run: |
          poetry run flake8
          poetry run pylint_runner
      - name: Test with pytest
        run: poetry run pytest --cov=src/ --cov-report=xml
      - name: Upload coverage
        uses: codecov/codecov-action@v1
      - name: Build package and publish to test PyPI
        env:
          TEST_PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TEST_PYPI_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
        run: |
          poetry config repositories.test-pypi https://test.pypi.org/legacy/
          poetry build
          poetry publish -r test-pypi -u $TEST_PYPI_USERNAME -p $TEST_PYPI_PASSWORD
